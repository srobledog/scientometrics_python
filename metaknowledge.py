# -*- coding: utf-8 -*-
"""MetaKnowledge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ccyWz_DxzR4sKHxGpgak96XKyggQD_dw
"""

!pip3 install metaknowledge

import metaknowledge as mk

import networkx as nx

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib

RC = mk.RecordCollection("/content/savedrecs_mk.txt")

print("RC is a " + str(RC))

"""# Making a co-citation network"""

CoCitation = RC.networkCoCitation()
print(mk.graphStats(CoCitation, makeString = True))

coCiteJournals = RC.networkCoCitation(nodeType = 'journal', dropNonJournals = True)
print(mk.graphStats(coCiteJournals))

nx.draw_spring(coCiteJournals)

"""# Making a citation network"""

citationsA = RC.networkCitation(nodeType = 'year', keyWords = ['A'])
print(mk.graphStats(citationsA))

nx.draw_spring(citationsA, with_labels = True)

"""# Making a co-author network

"""

coAuths = RC.networkCoAuthor()
print(mk.graphStats(coAuths))

"""# Exporting graphs"""

mk.writeGraph(coAuths, "/content/coAuths")

RCfiltered = mk.RecordCollection()

import pandas
recDataFrame = pandas.DataFrame(RC.makeDict())

recDataFrame

import networkx as nx

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import metaknowledge.contour.plotting as mkv

RC = mk.RecordCollection("/content/wos_scientometrics.txt")

CoCitation = RC.networkCoCitation()
print(mk.graphStats(CoCitation, makeString=True))

CoCitation.nodes(data = True)[0]

CoCitation.edges(data = True)[0]

coCiteJournals = RC.networkCoCitation(nodeType = 'journal', dropNonJournals = True)
print(mk.graphStats(coCiteJournals))

"""# Making a citation network

"""

